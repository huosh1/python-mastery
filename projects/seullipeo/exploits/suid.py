import os
import json
import subprocess
from utils.logger import setup_logger

logger = setup_logger()
GTFO_PATH = "data/gtfo.json"

def load_gtfo_data():
    try:
        with open(GTFO_PATH, "r") as f:
            return json.load(f)
    except Exception as e:
        logger.error(f"Erreur chargement GTFOBins : {e}")
        return {}

def scan_suid():
    try:
        result = subprocess.run(
            ["find", "/", "-perm", "-4000", "-type", "f"],
            stdout=subprocess.PIPE,stderr=subprocess.DEVNULL,text=True
        )
        return result.stdout.strip().split("\n")
    except Exception as e:
        logger.error(f"Erreur lors du scan SUID : {e}")
        return []

def run(execute=False):
    logger.info("[*] Lancement du module SUID")
    
    gtfo_data = load_gtfo_data()
    suid_files = scan_suid()

    for path in suid_files:
        binary = os.path.basename(path)
        if binary in gtfo_data:
            logger.info(f"[+] {path} — {gtfo_data[binary]['description']}")
            if execute:
                cmd = gtfo_data[binary]["command"]
                logger.info(f"[*] Tentative d'exécution : {cmd}")
                subprocess.run(cmd, shell=True)
        else:
            logger.debug(f"[-] {path} — non référencé dans GTFOBins")
